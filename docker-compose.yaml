services:
  client-react-nginx:
    container_name: client-react-nginx
    image: bosukeme/client-react-nginx:${IMAGE_TAG}
    build:
      context: ./client-react/
      dockerfile: Dockerfile
    init: true
    networks:
      - frontend
      - backend
    ports:
      - 80:8080
    restart: unless-stopped

  api-node:
    container_name: api-node
    image: bosukeme/api-node:${IMAGE_TAG}
    build:
      context: ./api-node/
      dockerfile: Dockerfile
    read_only: true
    init: true
    depends_on:
      - db
    env_file:
      - .env.local
    networks:
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "/usr/src/app/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s


  api-flask:
    container_name: api-flask
    image: bosukeme/api-flask:${IMAGE_TAG}
    build:
      context: ./api-flask/
      dockerfile: Dockerfile
    read_only: true
    init: true
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - backend
    ports:
      - 5000:5000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "/app/healthcheck/healthcheck.py"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15.1-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - backend
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5


volumes:
  pgdata:

networks:
  frontend:
  backend:
